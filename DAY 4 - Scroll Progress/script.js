// üéØ Element selection | –û—Ç—Ä–∏–º–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
const progressBar = document.getElementById('progress-bar');
const header = document.querySelector('header');
const navLinks = document.querySelectorAll('nav a');
const sections = document.querySelectorAll('section');

// üß† Update offset values on resize | –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ä–æ–∑–º—ñ—Ä—É
function updateHeaderOffset() {
  const headerHeight = header.offsetHeight;

  document.body.style.paddingTop = headerHeight + 'px';
  sections.forEach(section => {
    section.style.scrollMarginTop = headerHeight + 'px';
  });
}

// üí° Highlight active nav link | –ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
function updateActiveNav() {
  const currentScroll = window.scrollY;
  let currentSectionId = null;

  sections.forEach(section => {
    if (currentScroll >= section.offsetTop - header.offsetHeight) {
      currentSectionId = section.getAttribute('id');
    }
  });

  navLinks.forEach(link => {
    link.classList.toggle('active', link.getAttribute('href') === `#${currentSectionId}`);
  });
}

// üìè Update scroll progress bar | –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
function updateProgressBar() {
  const scrollTop = window.scrollY;
  const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;
  const scrolled = (scrollTop / scrollHeight) * 100;
  progressBar.style.width = `${scrolled}%`;
}

// üöÄ Master scroll handler | –ì–æ–ª–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó scroll
function handleScroll() {
  updateProgressBar();
  updateActiveNav();
}

// üîÅ Init | –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
updateHeaderOffset();
updateActiveNav();
updateProgressBar();

// üß∑ Listeners | –û–±—Ä–æ–±–Ω–∏–∫–∏
window.addEventListener('scroll', handleScroll);
window.addEventListener('resize', updateHeaderOffset);
